@model Kryds_Bolle.Models.Game
@using Kryds_Bolle.Controllers
@{
    ViewData["Title"] = "Index";
}

<style>
    button{
        width: 50px;
        height: 50px;
        align-items: center;
    }
</style>

<h1>Index</h1>

<p>Player: @ViewBag.Player</p>
<p>Symbol: @ViewBag.PlayerSymbol</p>
<p>Timer: </p>

<table>
    <tbody>
        @for (int i = 0; i < GameController.game.Board.GetLength(0); i++)
        {
            <tr>
                @for (int j = 0; j < GameController.game.Board.GetLength(1); j++)
                {
                    <td>
                        <button onclick="clicked()" type="button" id="btn" name="@GameController.game.Board[i,j]" data-row="@i" data-col="@j">@ViewBag.Board</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>




<script>
    function clicked(button) {
        var player = {
            id: '@ViewBag.Player',
            reload: 'unknown'
        }
        var board = {
            row: $(this).button('row'),
            col: $(this).button('col')
        }
        fetch('/Game/UpdateBoard', {
            method: 'post',
            headers: {
            'Content-Type': 'application/json'
            },
            body: JSON.stringify(player), JSON.stringify(board)
        })
            .then(function (response) {
                if (response.status !== 200) {
                    alert('fetch returned not ok' + response.status);
                }
                response.json().then(function (data) {
                    if (data.reload == 'true') {
                        alert('fetch was complete. Reload status is: ' + data.reload);
                        location.reload();
                    } else if (data.reload == 'false') {
                        alert('fetch was complete. Reload status is: ' + data.reload);
                        startTimer();
                    }
                });
            })

    }
</script>