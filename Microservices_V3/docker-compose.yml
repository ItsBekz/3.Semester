# version: '3'
# services:
#   api:
#     build: ./api
#     ports:
#       - "8080:80"
#     depends_on:
#       - rabbitmq
#     environment:
#       RABBITMQ_HOST: rabbitmq

#   mvc:
#     build: ./mvc
#     ports:
#       - "8081:80"
#     depends_on:
#       - rabbitmq
#     environment:
#       RABBITMQ_HOST: rabbitmq

#   database:
#     image: pokemondb:latest  # Specify the MySQL image
#     ports:
#       - "3306:3306"
#     environment:
      

#   rabbitmq:
#     image: rabbitmq:3-management
#     ports:
#       - "5672:5672"
#       - "15672:15672"

# networks:
#   default:
#     external:
#       name: my_network

version: '3'
services:
  pokemon-sql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: YourStrongPassword123
      ACCEPT_EULA: Y
    volumes:
      - ./DataBase.sql:/docker-entrypoint-initdb.d/DataBase.sql  # Mount the initialization script

  pokemon-api:
    build:
      context: ./PokemonApi
      dockerfile: Dockerfile  # Update this to the actual Dockerfile name
    ports:
      - "5000:80"
    depends_on:
      - pokemon-sql
    environment:
      ConnectionStrings__DefaultConnection: "Server=pokemon-sql,1433;Database=PokemonDB;User=sa;Password=admin;"

  pokemon-mvc:
    build:
      context: ./PokemonMVC
      dockerfile: Dockerfile  # Update this to the actual Dockerfile name
    ports:
      - "5001:80"
    depends_on:
      - pokemon-api
    environment:
      ApiSettings__BaseUrl: "http://pokemon-api:80"

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"

