// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorManyToMany.Data;

#nullable disable

namespace RazorManyToMany.Migrations
{
    [DbContext(typeof(RazorManyToManyContext))]
    partial class RazorManyToManyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.Property<int>("authorsid")
                        .HasColumnType("int");

                    b.Property<int>("booksid")
                        .HasColumnType("int");

                    b.HasKey("authorsid", "booksid");

                    b.HasIndex("booksid");

                    b.ToTable("AuthorBook");
                });

            modelBuilder.Entity("RazorManyToMany.Author", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("RazorManyToMany.Book", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("AuthorBook", b =>
                {
                    b.HasOne("RazorManyToMany.Author", null)
                        .WithMany()
                        .HasForeignKey("authorsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RazorManyToMany.Book", null)
                        .WithMany()
                        .HasForeignKey("booksid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
